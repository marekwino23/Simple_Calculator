{"version":3,"sources":["components/Calculator.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Keyboard","ref","useRef","useState","operation","setOperation","onClick","e","math","target","value","handleResult","useCallback","number1","number2","operatorIndex","search","slice","RegExp","test","operatorSignIndex","type","aria-label","className","onChange","number","placeholder","name","style","backgroundColor","color","split","splice","length","join","App","Calculator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.966c3dbf.chunk.js","sourcesContent":["import React, {useCallback, useRef, useState} from 'react';\r\n\r\nconst Keyboard = () => {\r\n    const ref = useRef();\r\n    const [operation, setOperation] = useState(\"\");\r\n    const onClick = (e) => {\r\n            const math = `${operation}${e.target.value}`; \r\n            setOperation(math);\r\n    }\r\n    const handleReset = () => {\r\n        setOperation(\"\");\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        setOperation(operation.split(\"\").splice(0,operation.length - 1).join(\"\"))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if(!/\\d/.test(e.target.value) && !/[-+/*]/.test(e.target.value)) {\r\n            return;\r\n        }\r\n        const operatorIndex = operation.search(/[-+/*]/);\r\n\r\n        if(operatorIndex === -1) {\r\n            setOperation(e.target.value);\r\n        } else {\r\n            const number = operation.slice(operatorIndex+1);\r\n            const regex1 = new RegExp(/[0-9]/, 'g' );\r\n            const isNumber = regex1.test(number);\r\n            if(isNumber) {\r\n               setOperation(e.target.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleResult = useCallback(() => {\r\n        const operatorIndex = operation.search(/[-+/*]/);\r\n        let number1, number2;\r\n        if(operatorIndex !== -1) {\r\n            number1 = +operation.slice(0, operatorIndex);\r\n            const regex1 = new RegExp(/[0-9]/, 'g' );\r\n            const isNumber = regex1.test(operation.slice(operatorIndex + 1));\r\n            if(isNumber) {\r\n                number2 = +operation.slice(operatorIndex + 1);\r\n            }\r\n        }\r\n\r\n\r\n        if(!number1 || !number2) {\r\n            return;\r\n        }\r\n        let operatorSignIndex = operation.search(/[-+/*]/);\r\n        if(operatorSignIndex !== -1) {\r\n            switch (operation[operatorSignIndex]) {\r\n                case '+': {\r\n                    setOperation(number1 + number2);\r\n                    break;\r\n                }\r\n                case '-': {\r\n                    setOperation(number1 - number2);\r\n                    break;\r\n                }\r\n                case '*': {\r\n                    setOperation(number1 * number2);\r\n                    break;\r\n                }\r\n                case '/': {\r\n                    setOperation(number1 / number2);\r\n                    break;\r\n                }\r\n                case '%': {\r\n                    setOperation(number1 % number2);\r\n                    break;\r\n                }\r\n                default: return 0;\r\n            }\r\n        }   \r\n    }, [ operation ]);\r\n\r\n    // useEffect(() => {\r\n    //     document.addEventListener('keydown', function(e) {\r\n    //         if(e.key === 'Backspace') {\r\n    //             const newOperation = operation.length ? operation.substring(0, operation.length -1) : operation;\r\n    //             setOperation(newOperation);\r\n    //             return;\r\n    //         }\r\n    //         if(!/[\\d-+/*=]/.test(e.key)) {\r\n    //             return;\r\n    //         }\r\n    //         if(e.key === '=') {\r\n    //             handleResult();\r\n    //         } else {\r\n    //            setOperation(`${operation}${e.key}`);\r\n    //         }\r\n    //     });\r\n    // }, [ handleResult, operation])\r\n    return(\r\n        <div ref={ref}>\r\n        <input type=\"text\" aria-label=\"result\" className=\"sum\" onChange={handleChange} placeholder={0} value={operation} />\r\n            <div className=\"grid-container\">\r\n                    <button name=\"seven\" className=\"grid-item\" value={7} onClick={onClick}>7</button>\r\n                    <button className=\"grid-item\" value={8} onClick={onClick}>8</button>\r\n                    <button className=\"grid-item\" value={9} onClick={onClick}>9</button>\r\n                    <button value=\"DEL\" style={{backgroundColor:\"#7171c3\", color:\"white\"}} onClick={handleDelete}>DEL</button>\r\n                    <button className=\"grid-item\" value={4} onClick={onClick}>4</button>\r\n                    <button className=\"grid-item\" value={5} onClick={onClick}>5</button>\r\n                    <button className=\"grid-item\" value={6} onClick={onClick}>6</button>\r\n                    <button value=\"+\" onClick={onClick}>+</button> \r\n                    <button className=\"grid-item\" value={1} onClick={onClick}>1</button>\r\n                    <button className=\"grid-item\" value={2} onClick={onClick}>2</button>\r\n                    <button className=\"grid-item\" value={3} onClick={onClick}>3</button>\r\n                    <button value=\"-\" onClick={onClick}>-</button>\r\n                    <button value=\".\" onClick={onClick}>.</button>\r\n                    <button value={0} onClick={onClick}>0</button>\r\n                    <button value=\"/\" onClick={onClick}>/</button>\r\n                    <button value=\"*\" onClick={onClick}>x</button>\r\n                    <button className=\"action\" value=\"RESET\" style={{backgroundColor:\"#647299\",color:\"white\"}} onClick={handleReset}>RESET</button>\r\n                    <button className=\"action\" value=\"=\" style={{backgroundColor:\"red\"}} onClick={handleResult}>=</button> \r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Keyboard;","import './App.css';\nimport Calculator from \"./components/Calculator\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}